<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper namespace="Dao.PlanDao">
<!--     public int insertPlan(PlanVO plan); -->
	<insert id="insertPlan" parameterType="PlanVO">
	INSERT INTO PLAN VALUES(
		PLAN_SEQ.NEXTVAL,
		#{PLAN_TITLE,jdbcType=VARCHAR},
		#{PLAN_CONTENT,jdbcType=VARCHAR},
		#{PLAN_FILE,jdbcType=VARCHAR},
		#{M_ID,jdbcType=VARCHAR},
		#{PLAN_MEMBER_COUNT,jdbcType=INTEGER},
		#{PLAN_DESTINATION,jdbcType=VARCHAR},
		#{PLAN_START,jdbcType=DATE},
		#{PLAN_END,jdbcType=DATE},
		#{PLAN_VIEWS,jdbcType=INTEGER},
		#{PLAN_STATE,jdbcType=VARCHAR},
		#{PLAN_GENDER,jdbcType=CHAR},
		<choose>
		<when test='PLAN_CREATE_DATE!=null'>#{PLAN_CREATE_DATE,jdbcType=DATE},</when>
		<otherwise>SYSDATE,</otherwise>
		</choose>
		#{PLAN_UPDATE_DATE,jdbcType=DATE},
		#{PLAN_DELETE_DATE,jdbcType=DATE}
	)
	</insert>


<!-- 	public int deletePlan(PlanVO plan); -->
<update id="deletePlan" parameterType="PlanVO">
	UPDATE PLAN SET
	PLAN_DELETE_DATE=SYSDATE	
	where PLAN_NO=${PLAN_NO}
</update>

<!-- 	public int updatePlan(PlanVO plan); -->
<update id="updatePlan" parameterType="PlanVO">
	UPDATE PLAN SET
	PLAN_TITLE=#{PLAN_TITLE,jdbcType=VARCHAR},
	PLAN_CONTENT=#{PLAN_CONTENT,jdbcType=VARCHAR},
	PLAN_FILE=#{PLAN_FILE,jdbcType=VARCHAR},
	PLAN_MEMBER_COUNT=#{PLAN_MEMBER_COUNT,jdbcType=INTEGER},
	PLAN_DESTINATION=#{PLAN_DESTINATION,jdbcType=VARCHAR},
	PLAN_START=#{PLAN_START,jdbcType=DATE},
	PLAN_END=#{PLAN_END,jdbcType=DATE},
	PLAN_VIEWS=#{PLAN_VIEWS,jdbcType=INTEGER},
	PLAN_GENDER=#{PLAN_GENDER,jdbcType=CHAR},
	PLAN_CREATE_DATE=#{PLAN_CREATE_DATE,jdbcType=DATE},
	PLAN_UPDATE_DATE=SYSDATE	
	where PLAN_NO=${PLAN_NO}
</update>



<!-- 	public PlanVO selectOnePlan(PlanVO plan); -->
<select id='selectOnePlan' parameterType="PlanVO" resultType="PlanVO">
SELECT * FROM PLAN WHERE PLAN_NO=#{PLAN_NO}
</select>

<!-- 	public ArrayList<PlanVO> getListPlan(HashMap<String, Object> params); -->
<select id="getListPlan" parameterType="java.util.HashMap" resultType="PlanVO">
	SELECT * FROM ( SELECT ROWNUM AS RN, A.* FROM(
	SELECT * FROM Plan WHERE 1 = 0
		<if test="PLAN_TITLE != null">
		    OR PLAN_TITLE LIKE '%${PLAN_TITLE}%'
		</if>
		<if test="PLAN_CONTENT != null">
		    OR PLAN_CONTENT LIKE '%${PLAN_CONTENT}%'
		</if>
		<if test="M_ID != null">
        	OR M_ID LIKE '%${M_ID}%'
		</if>
		<if test="type == 0">
				    or 1=1	   
		</if>
		<if test="PLAN_DESTINATION != null">
			AND PLAN_DESTINATION LIKE '%${PLAN_DESTINATION}%'
		</if>
		<if test="PLAN_GENDER != null">
			AND PLAN_GENDER LIKE '${PLAN_GENDER}'
		</if>
		<if test="PLAN_STATE != null">
			AND PLAN_STATE LIKE '%${PLAN_STATE}%'
		</if>		
		<if test="PLAN_NO != null">
			AND PLAN_NO = #{PLAN_NO}
		</if>
		<if test="startdate != null">
		   and PLAN_CREATE_DATE 
      	  between #{startdate} and #{enddate}
		</if>
		AND PLAN_DELETE_DATE IS NULL
         order by PLAN_NO DESC)
         A 
         )
         WHERE RN BETWEEN #{STARTRN} AND #{ENDRN}
</select>
<!-- public int getListCount(HashMap<String, Object> params); -->
<select id="getListCount" parameterType="java.util.HashMap" resultType="int">
	SELECT count(*) FROM ( SELECT ROWNUM AS RN, A.* FROM(
	SELECT * FROM Plan WHERE 1 = 0
		<if test="PLAN_TITLE != null">
		    OR PLAN_TITLE LIKE '%${PLAN_TITLE}%'
		</if>
		<if test="PLAN_CONTENT != null">
		    OR PLAN_CONTENT LIKE '%${PLAN_CONTENT}%'
		</if>
		<if test="M_ID != null">
        	OR M_ID LIKE '%${M_ID}%'
		</if>
		<if test="type == 0">
				    or 1=1	   
		</if>
		<if test="PLAN_DESTINATION != null">
			AND PLAN_DESTINATION LIKE '%${PLAN_DESTINATION}%'
		</if>
		<if test="PLAN_GENDER != null">
			AND PLAN_GENDER LIKE '${PLAN_GENDER}'
		</if>
		<if test="PLAN_STATE != null">
			AND PLAN_STATE LIKE '%${PLAN_STATE}%'
		</if>		
		<if test="PLAN_NO != null">
			AND PLAN_NO = #{PLAN_NO}
		</if>
		<if test="startdate != null">
		   and PLAN_CREATE_DATE 
      	  between #{startdate} and #{enddate}
		</if>
		AND PLAN_DELETE_DATE IS NULL
         order by PLAN_NO DESC)
         A 
         )
    </select>


<!-- 	public int recseqcheck(); -->
<select id="recseqcheck" resultType="int">
SELECT PLAN_SEQ.currval FROM DUAL
</select>





<!-- 	//해쉬맵으로 받되 모집게시판 번호와 멤버 아이디 를 함께 저장,, 기본으로 확정여부는 false>>(0,1) -->
<!-- 	public int insertPlan_Apply(HashMap<String,Object> params); -->
	<insert id="insertPlan_Apply" parameterType="Plan_ApplyVO">
	INSERT INTO PLAN_APPLY VALUES(
	PLAN_APPLY_SEQ.NEXTVAL,
	#{PLAN_NO,jdbcType=VARCHAR},
	#{PLAN_APPLY_CONFIRM,jdbcType=CHAR},
	#{M_ID,jdbcType=VARCHAR},
	<choose>
	<when test="PLAN_APPLY_CREATE_DATE!=null">
	#{PLAN_APPLY_CREATE_DATE,jdbcType=DATE},
	</when>
	<otherwise>
	SYSDATE,
	</otherwise>
	</choose>
	#{PLAN_APPLY_UPDATE_DATE,jdbcType=DATE},	
	#{PLAN_APPLY_DELETE_DATE,jdbcType=DATE}
	)
	</insert>
	
<!-- 	public int updatePlan_Apply(Plan_ApplyVO Plan_Apply); -->
	<update id="updatePlan_Apply" parameterType="Plan_ApplyVO">
	UPDATE PLAN_APPLY SET
	PLAN_APPLY_CONFIRM=#{PLAN_APPLY_CONFIRM,jdbcType=VARCHAR},
	PLAN_APPLY_UPDATE_DATE=SYSDATE
	WHERE PLAN_APPLY_NO=#{PLAN_APPLY_NO,jdbcType=INTEGER}
	</update>
	
<!-- 	public int deletePlan_Apply(Plan_ApplyVO Plan_Apply); -->
	<update id="deletePlan_Apply" parameterType="Plan_ApplyVO">
	UPDATE PLAN_APPLY SET
	PLAN_APPLY_DELETE_DATE=SYSDATE
	WHERE PLAN_APPLY_NO=#{PLAN_APPLY_NO,jdbcType=INTEGER}
	</update>	



	
<!-- public Plan_ApplyVO getPlan_Apply(Plan_ApplyVO plan_apply); -->
	<select id="getPlan_Apply" parameterType="Plan_ApplyVO" resultType="Plan_ApplyVO">
	SELECT * FROM PLAN_APPLY WHERE M_ID = #{M_ID,jdbcType=VARCHAR}
	AND
	PLAN_NO = #{PLAN_NO ,jdbcType=INTEGER}
	AND PLAN_APPLY_DELETE_DATE IS NULL
	</select>
	
<!-- 	//인원수 뱉어줄꺼 .. count()함수사용 -->
<!-- 	public int getPlan_ApplyCount(HashMap<String,Object> params); -->
	<select id="getPlan_ApplyCount" parameterType="java.util.HashMap" resultType="int">
	
	SELECT COUNT(*) FROM( 
	SELECT ROWNUM AS RN, A.* FROM(
	SELECT * FROM PLAN_APPLY 
	WHERE PLAN_NO=#{PLAN_NO}
	  AND PLAN_APPLY_DELETE_DATE IS NULL)
         A 
         )
	</select>
	
	
	<!--//확정된 인원수 뱉어줄꺼 .. count()함수사용
	public int getApplyCount(HashMap<String,Object> params);-->
	<select id="getApplyCount" parameterType="Plan_ApplyVO" resultType="int">
	
	SELECT COUNT(*) FROM( 
	SELECT ROWNUM AS RN, A.* FROM(
	SELECT * FROM PLAN_APPLY 
	WHERE PLAN_NO=#{PLAN_NO}
	  AND PLAN_APPLY_CONFIRM LIKE '%Y%'
	  AND PLAN_APPLY_DELETE_DATE IS NULL
	  )
     A 
      )
	</select>

<!-- 	//신청한 리스트 뱉어줄놈 -->
<!-- 	public ArrayList<Plan_ApplyVO> getPlan_ApplyList(HashMap<String,Object> params); -->
<select id="getPlan_ApplyList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT * FROM ( 
		SELECT ROWNUM AS RN, A.* FROM(
		SELECT * FROM PLAN_APPLY WHERE PLAN_NO=#{PLAN_NO}
	 	 AND PLAN_APPLY_DELETE_DATE IS NULL)
         A 
         )
         WHERE RN BETWEEN #{STARTRN} AND #{ENDRN}
	</select>
    </mapper>